{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Support Models\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/ritvik/opt/anaconda3/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/ritvik/opt/anaconda3/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Top Models\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/ritvik/opt/anaconda3/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/ritvik/opt/anaconda3/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/ritvik/opt/anaconda3/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mid Models\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/ritvik/opt/anaconda3/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/ritvik/opt/anaconda3/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Jungle Models\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/ritvik/opt/anaconda3/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/ritvik/opt/anaconda3/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ADC Models\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/ritvik/opt/anaconda3/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "League of Legends Championship Super Fantasy Series\n",
      "Please input your UserName: Ritvik\n",
      "What position would you like to find the player list in ? top\n",
      "FakeGod\n",
      "Finn\n",
      "Fudge\n",
      "Huni\n",
      "Impact\n",
      "Jenkins\n",
      "Licorice\n",
      "Revenge\n",
      "solo\n",
      "ssumday\n",
      "Please select a player from the list above Fudge\n",
      "Player has been successfully added to your team roster\n",
      "Fudge_top \n",
      "Please select an option from above to view stats for Fudge_top \n",
      "Fudge_top \n",
      "kda: 3.3\n",
      "DMP: 21.3\n",
      "You currently have 470 Points\n",
      "How much would you like to bet?\n",
      "Enter Amount:100\n",
      "What team would you like to bet on, please enter the offical abbrevation?\n",
      "Offical abbreviations: GG, EG, TL, 100T, TSM, FQ, CLG, IMT, DIG, C9\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from scipy import stats\n",
    "import statsmodels.api as sm\n",
    "from collections import Counter\n",
    "import random\n",
    "import tkinter as tk\n",
    "\n",
    "df = pd.read_csv(\"data/full_table_-_Sheet1.csv\")\n",
    "\n",
    "df1 = df[df['Games'] >= 7]\n",
    "placeBet = 0\n",
    "\n",
    "#TOP\n",
    "def Top():\n",
    "  print(\"Top Models\")\n",
    "  df_top = df1[df1['Position'] == \"TOP\"]\n",
    "  df_top = df_top.reset_index()\n",
    "  df_top = df_top.assign(Win_rate=0.00)\n",
    "  for x in range(0, 10):\n",
    "      temp = df_top.iloc[x, 4]\n",
    "      df_top.at[x, 'Win_rate'] = float(temp[0:2]) + 0.00\n",
    "  df_top = df_top.assign(kda=0.00)\n",
    "  for x in range(0, 10):\n",
    "      temp = df_top.iloc[x, 5]\n",
    "      df_top.at[x, 'kda'] = float(temp[0:2]) + 0.00\n",
    "  df_top = df_top.assign(dmp=0.00)\n",
    "  for x in range(0, 10):\n",
    "      temp = df_top.iloc[x, 12]\n",
    "      df_top.at[x, 'dmp'] = temp\n",
    "\n",
    "  x = df_top[['kda', 'dmp']]\n",
    "  y = df_top['Win_rate']\n",
    "  for col in x.columns:\n",
    "      plt.figure()\n",
    "      plt.scatter(x[col], y)\n",
    "      sns.regplot(x[col], y)\n",
    "      plt.ylabel('Win_rate')\n",
    "      plt.xlabel(col)\n",
    "      plt.show()\n",
    "  return df_top\n",
    "\n",
    "#JUNGLE\n",
    "def Jungle():\n",
    "  print(\"Jungle Models\")\n",
    "  df_jg = df1[df1['Position'] == \"JUNGLE\"]\n",
    "  df_jg = df_jg.reset_index() \n",
    "\n",
    "  df_jg = df_jg.assign(Win_rate=0.00)\n",
    "  for x in range(0, 10):\n",
    "      temp = df_jg.iloc[x, 4]\n",
    "      df_jg.at[x, 'Win_rate'] = float(temp[0:2]) + 0.00\n",
    "  df_jg = df_jg.assign(kp=0.00)\n",
    "  for x in range(0, 10):\n",
    "      temp = df_jg.iloc[x, 11]\n",
    "      df_jg.at[x, 'kp'] = float(temp[0:2]) + 0.00\n",
    "\n",
    "  df_jg = df_jg.assign(fb=0.00)\n",
    "  for x in range(0, 10):\n",
    "      temp = df_jg.iloc[x, 12]\n",
    "      df_jg.at[x, 'fb'] = temp\n",
    "\n",
    "  x = df_jg[['kp', 'fb']]\n",
    "  y = df_jg['Win_rate']\n",
    "  for col in x.columns:\n",
    "      plt.figure()\n",
    "      plt.scatter(x[col], y)\n",
    "      sns.regplot(x[col], y)\n",
    "      plt.ylabel('Win_rate')\n",
    "      plt.xlabel(col)\n",
    "      plt.show()  \n",
    "  return df_jg\n",
    "\n",
    "#MID\n",
    "def Mid():\n",
    "  print(\"Mid Models\")\n",
    "  df_mid = df1[df1['Position'] == \"MID\"]\n",
    "  df_mid = df_mid.reset_index()\n",
    "\n",
    "  df_mid = df_mid.assign(Win_rate=0.00)\n",
    "  for x in range(0, 10):\n",
    "      temp = df_mid.iloc[x, 4]\n",
    "      df_mid.at[x, 'Win_rate'] = float(temp[0:2]) + 0.00\n",
    "\n",
    "  x = df_mid[['GPM', 'DPM']]\n",
    "  y = df_mid['Win_rate']\n",
    "  for col in x.columns:\n",
    "      plt.figure()\n",
    "      plt.scatter(x[col], y)\n",
    "      sns.regplot(x[col], y)\n",
    "      plt.ylabel('Win_rate')\n",
    "      plt.xlabel(col)\n",
    "      plt.show()\n",
    "  return df_mid\n",
    "\n",
    "#ADC\n",
    "def ADC ():\n",
    "  print(\"ADC Models\")\n",
    "  df_adc = df1[df1['Position']==\"ADC\"]\n",
    "  df_adc = df_adc.reset_index()\n",
    "\n",
    "  df_adc = df_adc.assign(Win_rate=0.00)\n",
    "  for x in range(0, 10):\n",
    "      temp = df_adc.iloc[x, 4]\n",
    "      df_adc.at[x, 'Win_rate'] = float(temp[0:2]) + 0.00\n",
    "\n",
    "  x = df_adc[['GPM', 'CSM']]\n",
    "  y = df_adc['Win_rate']\n",
    "  for col in x.columns:\n",
    "      plt.figure()\n",
    "      plt.scatter(x[col], y)\n",
    "      sns.regplot(x[col], y)\n",
    "      plt.ylabel('Win_rate')\n",
    "      plt.xlabel(col)\n",
    "      plt.show()\n",
    "  return df_adc\n",
    "\n",
    "#SUPPORT\n",
    "def Support():\n",
    "  print(\"Support Models\")\n",
    "  df_sup = df1[df1['Position'] == \"SUPPORT\"]\n",
    "  df_sup = df_sup.reset_index()\n",
    "\n",
    "  df_sup = df_sup.assign(Win_rate=0.00)\n",
    "  for x in range(0, 10):\n",
    "      temp = df_sup.iloc[x, 4]\n",
    "      df_sup.at[x, 'Win_rate'] = float(temp[0:2]) + 0.00\n",
    "\n",
    "  df_sup = df_sup.assign(kp=0.00)\n",
    "  for x in range(0, 10):\n",
    "      temp = df_sup.iloc[x, 11]\n",
    "      df_sup.at[x, 'kp'] = float(temp[0:2]) + 0.00\n",
    "\n",
    "  x = df_sup[['kp', 'VSPM']]\n",
    "  y = df_sup['Win_rate']\n",
    "  for col in x.columns:\n",
    "      plt.figure()\n",
    "      plt.scatter(x[col], y)\n",
    "      sns.regplot(x[col], y)\n",
    "      plt.ylabel('Win_rate')\n",
    "      plt.xlabel(col)\n",
    "      plt.show()\n",
    "  return df_sup\n",
    "\n",
    "df_sup = Support()\n",
    "df_top = Top()\n",
    "df_mid = Mid()\n",
    "df_jg = Jungle()\n",
    "df_adc = ADC()\n",
    "#Variables + Lists\n",
    "winList = []\n",
    "lossList = []\n",
    "userDetails = []\n",
    "myTeam = []\n",
    "cmdList = [\n",
    "    \"View Team: Allows you to view your team\",\n",
    "    \"Bet: Allows you to place a bet\", \"Exit: Exits the Game\",\n",
    "    \"Make Team: Allows you to make your team\"\n",
    "]\n",
    "cmd = \"cmd list\"\n",
    "wallet = 500\n",
    "Teams = {\n",
    "  \"GG\" : 30, #Golden Guardians\n",
    "  \"EG\" : 40, #Evil Geniuses\n",
    "  \"TL\" : 60, #Team Liquid\n",
    "  \"100T\" : 80, #100 Theives\n",
    "  \"TSM\" : 80, #TeamSoloMid\n",
    "  \"FQ\" : 30, #Flyquest\n",
    "  \"CLG\" : 40, #Counter-logic Gaming\n",
    "  \"IMT\" : 60, #Immortals\n",
    "  \"DIG\" :  30, #Dignitas\n",
    "  \"C9\" : 50, #Cloud9\n",
    "}\n",
    "\n",
    "for tt, pctn in Teams.items():\n",
    "  rndnum = random.randint(1,101)\n",
    "  if (pctn >= rndnum):\n",
    "    winList.append(tt)\n",
    "  else:\n",
    "    lossList.append(tt)\n",
    "    \n",
    "  \n",
    "#Command Functions\n",
    "def ViewTeam():\n",
    "    global myTeam\n",
    "    for i in myTeam:\n",
    "        print(i)\n",
    "    cc = str(input(\"Please select an option from above to view stats for \"))\n",
    "    count = 0\n",
    "    ind = 0\n",
    "    for i in myTeam:\n",
    "        print(i)\n",
    "        if (cc == i):\n",
    "            ind = count\n",
    "        count += 1\n",
    "    indp = myTeam[ind].find(\"_\")\n",
    "\n",
    "    if (cc[indp + 1:-1] == \"jg\"):\n",
    "        dftttt = df_jg[df_jg['Player'] == cc[0:indp]]\n",
    "        print(\"kp: \" + str(dftttt.iloc[0, 11]))\n",
    "        print(\"fb: \" + str(dftttt.iloc[0, 12]))\n",
    "    elif (cc[indp + 1:-1] == \"top\"):\n",
    "        dftttt = df_top[df_top['Player'] == cc[0:indp]]\n",
    "        print(\"kda: \" + str(dftttt.iloc[0, 5]))\n",
    "        print(\"DMP: \" + str(dftttt.iloc[0, 12]))\n",
    "    elif (cc[indp + 1:-1] == \"mid\"):\n",
    "        dftttt = df_mid[df_mid['Player'] == cc[0:indp]]\n",
    "        print(\"GPM: \" + str(dftttt.iloc[0, 10]))\n",
    "        print(\"DMP: \" + str(dftttt.iloc[0, 12]))\n",
    "    elif (cc[indp + 1:-1] == \"adc\"):\n",
    "        dftttt = df_adc[df_adc['Player'] == cc[0:indp]]\n",
    "        print(\"CSM: \" + str(dftttt.iloc[0, 9]))\n",
    "        print(\"DMP: \" + str(dftttt.iloc[0, 12]))\n",
    "    elif (cc[indp + 1:-1] == \"sup\"):\n",
    "        dftttt = df_sup[df_sup['Player'] == cc[0:indp]]\n",
    "        print(\"kp: \" + str(dftttt.iloc[0, 11]))\n",
    "        print(\"VSPM: \" + str(dftttt.iloc[0, 13]))\n",
    "\n",
    "\n",
    "def MakeTeam():\n",
    "    global wallet\n",
    "    global myTeam\n",
    "    #Displaying names based on positon chosen by user\n",
    "    pst = str(\n",
    "        input(\"What position would you like to find the player list in ? \"))\n",
    "    if (pst == \"mid\"):\n",
    "        temptt = df_mid\n",
    "        for x in range(0, 10):\n",
    "            print(df_mid.iloc[x, 1])\n",
    "    elif (pst == \"top\"):\n",
    "        temptt = df_top\n",
    "        for x in range(0, 10):\n",
    "            print(df_top.iloc[x, 1])\n",
    "    elif (pst == \"jg\"):\n",
    "        temptt = df_jg\n",
    "        for x in range(0, 10):\n",
    "            print(df_jg.iloc[x, 1])\n",
    "    elif (pst == \"adc\"):\n",
    "        temptt = df_adc\n",
    "        for x in range(0, 10):\n",
    "            print(df_adc.iloc[x, 1])\n",
    "    elif (pst == \"sup\"):\n",
    "        temptt = df_sup\n",
    "        for x in range(0, 10):\n",
    "            print(df_sup.iloc[x, 1])\n",
    "\n",
    "    player_choice = str(input(\"Please select a player from the list above \"))\n",
    "    tempdf = temptt[temptt['Player'] == player_choice]\n",
    "    ttttttttt = tempdf.iloc[0, 4]\n",
    "    ttttttttt = ttttttttt[0:2]\n",
    "    ww = int(ttttttttt)\n",
    "    \n",
    "    ss = player_choice + \"_\" + pst + \" \"\n",
    "    if (ww >= 80):\n",
    "        if (wallet >= 50):\n",
    "            wallet -= 50\n",
    "            myTeam.append(ss)\n",
    "            print(\"Player has been successfully added to your team roster\")\n",
    "        else:\n",
    "            print(\"You do not have enough points in your wallet\")\n",
    "    elif (ww >= 60):\n",
    "        if (wallet >= 40):\n",
    "            wallet -= 40\n",
    "            myTeam.append(ss)\n",
    "            print(\"Player has been successfully added to your team roster\")\n",
    "        else:\n",
    "            print(\"You do not have enough points in your wallet\")\n",
    "    elif (ww >= 40):\n",
    "        if (wallet >= 30):\n",
    "            wallet -= 30\n",
    "            myTeam.append(ss)\n",
    "            print(\"Player has been successfully added to your team roster\")\n",
    "        else:\n",
    "            print(\"You do not have enough points in your wallet\")\n",
    "    elif (ww >= 40):\n",
    "        if (wallet >= 20):\n",
    "            wallet -= 20\n",
    "            myTeam.append(ss)\n",
    "            print(\"Player has been successfully added to your team roster\")\n",
    "        else:\n",
    "            print(\"You do not have enough points in your wallet\")\n",
    "    elif (ww >= 0):\n",
    "        if (wallet >= 10):\n",
    "            wallet -= 10\n",
    "            myTeam.append(ss)\n",
    "            print(\"Player has been successfully added to your team roster\")\n",
    "        else:\n",
    "            print(\"You do not have enough points in your wallet\")\n",
    "    \n",
    "def Bet():\n",
    "  global lossList\n",
    "  global winList\n",
    "  global wallet\n",
    "  global placeBet\n",
    "  print(\"You currently have \" + str(wallet) + \" Points\")\n",
    "  print(\"How much would you like to bet?\")\n",
    "  placeBet = int(input(\"Enter Amount:\"))\n",
    "  if placeBet > wallet:\n",
    "    print(\"Insufficient Points\")\n",
    "  else:\n",
    "    print(\"What team would you like to bet on, please enter the offical abbrevation?\")\n",
    "    print(\"Offical abbreviations: GG, EG, TL, 100T, TSM, FQ, CLG, IMT, DIG, C9\")\n",
    "    bet = input(\"Enter team name: \")\n",
    "    status = False\n",
    "    st1 = 0\n",
    "    for i in winList:\n",
    "         if (st1 == 0):\n",
    "                if(bet == i):\n",
    "                    status = True\n",
    "                    st1 = st1 + 1\n",
    "    if status == True:\n",
    "        wallet = wallet + placeBet\n",
    "        print(\"You have won! Your new balance is: \" + str(wallet))\n",
    "    else:\n",
    "        wallet = wallet - placeBet\n",
    "        print(\"You have lost! Your new balance is: \" + str(wallet))\n",
    "\n",
    "#GamePlay\n",
    "print(\"League of Legends Championship Super Fantasy Series\")\n",
    "userName = input(\"Please input your UserName: \")\n",
    "\n",
    "def onclick():\n",
    "    MakeTeam()\n",
    "\n",
    "def onclick2():\n",
    "    ViewTeam()\n",
    "\n",
    "def onclick3():\n",
    "    Bet()\n",
    "    \n",
    "def onclick4():\n",
    "    quit()\n",
    "        \n",
    "root = tk.Tk()\n",
    "root.title(\"League of Legends Betting\")\n",
    "\n",
    "but1 = tk.Button(root, text=\"Make Team\",command=onclick)\n",
    "but2 = tk.Button(root, text=\"View Team\",command=onclick2)\n",
    "but3 = tk.Button(root, text=\"Place Bet\",command=onclick3)\n",
    "but4 = tk.Button(root, text=\"Exit\",command=onclick4)\n",
    "T = tk.Text(root, height=2, width=30)\n",
    "\n",
    "but1.pack()\n",
    "but2.pack()\n",
    "but3.pack()\n",
    "but4.pack()\n",
    "T.pack()\n",
    "T.insert(tk.END, \"  Starting Wallet Balance: \" + str(wallet))\n",
    "root.configure(background='white')\n",
    "root.mainloop()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
